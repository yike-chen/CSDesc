2020-01-10 19:35:09,587 Namespace(arch='alexnet', batchSize=12, cacheBatchSize=96, cachePath='/home/annora/NetVLAD/output/', cacheRefreshRate=3000, ckpt='best', contilearn=False, dataPath='/home/annora/NetVLAD/output/data/', dataset='pittsburgh', evalEvery=1, fromscratch=False, fromtask='', lr=0.0001, lrGamma=0.5, lrStep=5, margin=0.1, mode='cluster', momentum=0.9, nEpochs=50, nGPU=1, nocuda=False, num_clusters=64, optim='SGD', patience=10, pooling='netvlad', premodel='places', resume='', runsPath='/home/annora/NetVLAD/output/runs/', savePath='checkpoints', seed=123, split='val', start_epoch=0, threads=8, vladv2=False, weightDecay=0.001)
2020-01-10 19:35:09,651 ===> Loading dataset(s)
2020-01-10 19:35:09,874 ===> Building model
2020-01-10 19:35:09,930 encoder moder:
AlexNet(
  (conv1): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (conv2): Sequential(
    (0): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (1): ReLU(inplace)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (conv3): Sequential(
    (0): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
  )
  (conv4): Sequential(
    (0): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
  )
  (conv5): Sequential(
    (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)
2020-01-10 19:35:13,877 ===> Calculating descriptors and clusters
2020-01-10 19:35:13,880 ====> Extracting Descriptors
2020-01-10 19:35:23,986 ==> Batch (1/6)
2020-01-10 19:35:24,072 ==> Batch (2/6)
2020-01-10 19:35:24,153 ==> Batch (3/6)
2020-01-10 19:35:24,235 ==> Batch (4/6)
2020-01-10 19:35:24,318 ==> Batch (5/6)
2020-01-10 19:35:24,334 ==> Batch (6/6)
2020-01-10 19:35:24,631 ====> Clustering..
2020-01-10 19:35:25,268 ====> Storing centroids (64, 256)
2020-01-10 19:35:25,270 ====> Done!
